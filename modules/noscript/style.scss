@use "sass:map";
@use "../../assets/styles/theme/functions" as *;
@use "../../assets/styles/theme/eases" as *;
@use "../../assets/styles/theme/mixins" as *;
@use "../../assets/styles/theme/effects" as *;
@use "../../assets/styles/theme/colors";
@import "../../assets/styles/theme/animations";

$animation-options: $ease-out-expo 600ms backwards;

@function use-accent($key) {
	@return map.get(map.get(map.get(colors.$primary-colors, pink), $key);
}

$pink: map.get(colors.$primary-colors, pink);

:root {
	--accent: #f06e8e;
	--accent-10: #ffedf2;
	--accent-shadow-rgb: 193, 159, 168;
	--accent-hover: #f390a9;
}

* {
	user-select: none !important;
}

.mask {
	@include flex-center;
	@include full-screen;
	position: fixed;
	top: 0;
	left: 0;
	z-index: 100;
	background-color: c(white, 50%);
	backdrop-filter: blur(5px);
}

.card {
	@include square(100%);
	@include round-large;
	@include card-shadow;
	position: relative;
	width: 1024px;
	height: 600px;
	overflow: hidden;
	background-color: c(white, 75%);
	animation: intro $animation-options;

	.card-body {
		position: relative;
		z-index: 2;
		display: grid;
		grid-template-rows: auto 1fr;
		grid-template-columns: auto 1fr;
		gap: 36px 60px;
		padding: 60px 70px;

		h1 {
			top: 70px;
			right: 50px;
			grid-column: 1 / 3;
			margin: 0;
			color: c(accent);
			font-size: 64px;
			text-align: right;
			animation: move-down $animation-options;
		}

		.logo {
			bottom: 60px;
			left: 70px;
			animation: move-up $animation-options;
		}

		p {
			top: 200px;
			left: 500px;
			margin: 0;
			font-size: 20px;
			line-height: 30px;
			animation: move-left $animation-options;
		}
	}

	.card-back {
		@include square(100%);
		position: absolute;
		z-index: 1;

		.settings-icon {
			position: absolute;
			color: c(accent-10);
			animation: rotation $ease-out-expo 16s infinite;

			&:first-of-type {
				top: -120px;
				left: -100px;
				font-size: 450px;
			}

			&:last-of-type {
				right: -100px;
				bottom: -200px;
				font-size: 612px;
			}
		}
	}
}

@keyframes move-down {
	from {
		translate: 0 -50px;
	}
}

@keyframes move-left {
	from {
		translate: 50px;
	}
}

@keyframes move-up {
	from {
		translate: 0 50px;
	}

	to {
		translate: 0;
	}
}

@keyframes rotation {
	$length: 16;

	@for $i from 0 to $length {
		$progress: calc($i / $length);

		#{$progress * 100%} {
			rotate: $progress * 1turn;
		}
	}
}
