// stylelint-disable order/order

@use "sass:map";
@use "sass:list";
@use "sass:string";
@use "../../assets/styles/theme/colors";
@use "../../assets/styles/theme/functions" as *;
@use "../../assets/styles/theme/internal" as *;

$accent-colors: accent-10;
$state-colors: accent, accent-rgb, accent-shadow-rgb, accent-hover, accent-focus, accent-focus-rgb, accent-pressed;
$neutral-colors: main-bg-rgb;

$pink: (
	accent-80: #a23b57 #ffd3de,
	accent-70: #b64561 #f8afc1,
	accent-60: #cc5775 #f390a9, // pressed
	accent-50: #f06e8e #f06e8e, // normal
	accent-40: #f390a9 #cc5775, // hover
	accent-30: #f8afc1 #b64561, // focus
	accent-20: #ffd3de #802f45, // disabled
	accent-10: #ffedf2 #752b3f,
	neutral-10: #c19fa8 black, // card-shadow
); // TODO: 这里目前先将就一下。

@function get-key($tkey) {
	$suffix-index: string.index($tkey, -rgb);
	$key: if(not $suffix-index, $tkey, string.slice($tkey, 1, $suffix-index - 1));
	@return $key;
}

@mixin use-color($tkey, $color, $is-light) {
	$key: get-key($tkey);
	$is-rgb-list: $tkey != $key;
	
	$result: list.nth($color, if($is-light, 1, 2));
	
	@if not $is-rgb-list {
		--#{$key}: #{$result};
	} @else {
		--#{$tkey}: #{color-to-rgb-list($result)};
	}
}

@mixin definition($is-light) {
	@each $tkey in $accent-colors {
		$key: get-key($tkey);
		@include use-color($tkey, map.get($pink, $key), $is-light);
	}

	@each $tkey in $state-colors {
		$key: get-key($tkey);
		@include use-color($tkey, map.get($pink, map.get(colors.$state-colors, $key)), $is-light);
	}

	@each $tkey in $neutral-colors {
		$key: get-key($tkey);
		@include use-color($tkey, map.get(colors.$neutral-colors, $key), $is-light);
	}

	@include wave-link(true, map.get($pink, map.get(colors.$state-colors, accent-hover)), $is-light);
}

:root {
	@include definition(true);

	@media (prefers-color-scheme: dark) {
		@include definition(false);
	}
}
