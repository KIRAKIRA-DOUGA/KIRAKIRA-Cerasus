diff --git a/node_modules/@vue/compiler-sfc/dist/compiler-sfc.cjs.js b/node_modules/@vue/compiler-sfc/dist/compiler-sfc.cjs.js
index 289ecf7..4b1a757 100644
--- a/node_modules/@vue/compiler-sfc/dist/compiler-sfc.cjs.js
+++ b/node_modules/@vue/compiler-sfc/dist/compiler-sfc.cjs.js
@@ -7864,9 +7864,6 @@ function rewriteSelector(id, selector, selectorRoot, slotted = false) {
           }
           selector.removeChild(n);
         } else {
-          warn(
-            `${value} usage as a combinator has been deprecated. Use :deep(<inner-selector>) instead of ${value} <inner-selector>.`
-          );
           const prev = selector.at(selector.index(n) - 1);
           if (prev && isSpaceCombinator(prev)) {
             selector.removeChild(prev);
diff --git a/node_modules/@vue/compiler-sfc/dist/compiler-sfc.esm-browser.js b/node_modules/@vue/compiler-sfc/dist/compiler-sfc.esm-browser.js
index b4ff071..bc070ff 100644
--- a/node_modules/@vue/compiler-sfc/dist/compiler-sfc.esm-browser.js
+++ b/node_modules/@vue/compiler-sfc/dist/compiler-sfc.esm-browser.js
@@ -41304,9 +41304,6 @@ function rewriteSelector(id, selector, selectorRoot, slotted = false) {
           }
           selector.removeChild(n);
         } else {
-          warn$1(
-            `${value} usage as a combinator has been deprecated. Use :deep(<inner-selector>) instead of ${value} <inner-selector>.`
-          );
           const prev = selector.at(selector.index(n) - 1);
           if (prev && isSpaceCombinator(prev)) {
             selector.removeChild(prev);
