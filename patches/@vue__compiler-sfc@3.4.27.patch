diff --git a/dist/compiler-sfc.cjs.js b/dist/compiler-sfc.cjs.js
index 4166aef1d259c0665eda8863369ddab58c2ba576..478a27361d6d3e621e19370c9cd5dd51652827d2 100644
--- a/dist/compiler-sfc.cjs.js
+++ b/dist/compiler-sfc.cjs.js
@@ -7907,9 +7907,6 @@ function rewriteSelector(id, selector, selectorRoot, slotted = false) {
           }
           selector.removeChild(n);
         } else {
-          warn(
-            `${value} usage as a combinator has been deprecated. Use :deep(<inner-selector>) instead of ${value} <inner-selector>.`
-          );
           const prev = selector.at(selector.index(n) - 1);
           if (prev && isSpaceCombinator(prev)) {
             selector.removeChild(prev);
diff --git a/dist/compiler-sfc.esm-browser.js b/dist/compiler-sfc.esm-browser.js
index 77b2f9378b9bfbddcd438267875c299905525a75..8614d8d5a6df226725671b2a28300d1f2d5304c2 100644
--- a/dist/compiler-sfc.esm-browser.js
+++ b/dist/compiler-sfc.esm-browser.js
@@ -40305,9 +40305,6 @@ function rewriteSelector(id, selector, selectorRoot, slotted = false) {
           }
           selector.removeChild(n);
         } else {
-          warn(
-            `${value} usage as a combinator has been deprecated. Use :deep(<inner-selector>) instead of ${value} <inner-selector>.`
-          );
           const prev = selector.at(selector.index(n) - 1);
           if (prev && isSpaceCombinator(prev)) {
             selector.removeChild(prev);
