diff --git a/dist/compiler-sfc.cjs.js b/dist/compiler-sfc.cjs.js
index 95287e2531c750b73653048f639e5ab1759fb19d..c0bf1cf86e9e4c7ea04d2b2bc710e099f0758f84 100644
--- a/dist/compiler-sfc.cjs.js
+++ b/dist/compiler-sfc.cjs.js
@@ -7899,9 +7899,6 @@ function rewriteSelector(id, selector, selectorRoot, slotted = false) {
           }
           selector.removeChild(n);
         } else {
-          warn(
-            `${value} usage as a combinator has been deprecated. Use :deep(<inner-selector>) instead of ${value} <inner-selector>.`
-          );
           const prev = selector.at(selector.index(n) - 1);
           if (prev && isSpaceCombinator(prev)) {
             selector.removeChild(prev);
diff --git a/dist/compiler-sfc.esm-browser.js b/dist/compiler-sfc.esm-browser.js
index fb60d9cddb360107d04daf1a3035b009eb5276f0..c79f274fb96d3c2c36a544dd8a8cf9d1991b7551 100644
--- a/dist/compiler-sfc.esm-browser.js
+++ b/dist/compiler-sfc.esm-browser.js
@@ -40346,9 +40346,6 @@ function rewriteSelector(id, selector, selectorRoot, slotted = false) {
           }
           selector.removeChild(n);
         } else {
-          warn(
-            `${value} usage as a combinator has been deprecated. Use :deep(<inner-selector>) instead of ${value} <inner-selector>.`
-          );
           const prev = selector.at(selector.index(n) - 1);
           if (prev && isSpaceCombinator(prev)) {
             selector.removeChild(prev);
