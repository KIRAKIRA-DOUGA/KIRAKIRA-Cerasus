@use "variables" as *;

/// 一键弹性布局加居中元素 (flex - center - center)。
/// @output display, align-items, justify-content
@mixin flex-center {
	display: flex;
	align-items: center;
	justify-content: center;
}

/// 变成椭圆形。
/// 将 border-radius 设为一个非常大的值。
/// @output border-radius
@mixin oval {
	border-radius: 9999rem;
}

/// 变成正方形。长宽均相等。
/// @param {Number} $size - 长度。
/// @output width, height
@mixin square($size) {
	width: $size;
	height: $size;
}

/// 变成圆形。
/// 将 border-radius 设为 100%。
/// @output border-radius
@mixin circle {
	border-radius: 100%;
}

/// 将元素占满整个屏幕。
/// 将长宽均设为 100% 视窗宽高度值。
///
/// NOTE: 100vh 将不会包含手机浏览器的地址栏和工具栏的高度。
/// @param {String} $position [fixed] - 指定元素的 position 属性。
/// @output width, height
@mixin full-screen($position: fixed) {
	position: $position;
	top: 0;
	left: 0;
	width: 100vw;
	height: 100vh;
	transition: $fallback-transitions, width 0s, height 0s;
}

/// 池沼 block 布局会恶意在元素之间加空隙，使用 flex 得永恒。
/// @output display, flex-direction
@mixin flex-block {
	display: flex;
	flex-direction: column;
}

/// 去除垂直方向上的间距空隙，在高度变化动画中很有用。
/// @output margin-top, margin-bottom, padding-top, padding-bottom
@mixin no-vertical-spacing {
	margin-top: 0;
	margin-bottom: 0;
	padding-top: 0;
	padding-bottom: 0;
}

/// 修复在 flex 布局 overflow 开启滚动之后，页面末尾的边距消失了的问题。
/// 在 flex 布局的 after 伪元素中使用。
/// @example scss
/// 	.flex::after {
/// 		@include fix-page-end-padding;
/// 	}
/// @output display, clear, height, visibility, content
@mixin fix-page-end-padding {
	display: block;
	clear: both;
	height: 0;
	visibility: hidden; // 占位但不可见。
	content: "."; // 内容不能为空。
}

/// 未知宽/高度的绝对定位的居中。
/// @param {String} $position [fixed] - 指定元素的 position 属性。
/// @output position, top, left, translate
@mixin absolute-center($position: absolute) {
	position: $position;
	top: 50%;
	left: 50%;
	translate: -50% -50%;
}

/// 已知宽/高度的绝对定位的居中。
/// NOTE: 使用此混合必须指定宽高度。
/// @param {String} $position [fixed] - 指定元素的 position 属性。
/// @output - position, top, right, bottom, left, margin
@mixin absolute-center-widthful($position: absolute) {
	position: $position;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	margin: auto;
}

/// 应用 Material Design 大水波纹按钮时，不要让大水波纹扩大了按钮的点击面积。
/// @output - pointer-events, z-index
@mixin ripple-clickable-only-inside {
	> * {
		pointer-events: none;
	}

	&:is(:hover, :active, :focus-visible) {
		z-index: 1;

		> * {
			pointer-events: auto;
		}
	}

	&:active {
		z-index: 2;
	}
}
