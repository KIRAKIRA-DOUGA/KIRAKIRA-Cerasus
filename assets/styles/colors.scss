// 灰阶类颜色
// 此处的颜色各主题色均通用。
$grayscale-colors: (
	main-bg: (white, #161b22), // 如果定义为列表，则第一项为浅色主题颜色，第二项为深色主题颜色。
	inner-color: #fafafa,
	gray: #e9e9e9,
	gray-2: #ccc,
	icon-color-400: #bcb3b6,
	icon-color: #797173,
	text-color: #212121, // 如果定义为单个颜色，则自动识别为浅色主题颜色，深色主题颜色通过反转亮度自动计算得出。
); // 如果不想让它反转亮度，请定义为列表，并将列表两项设为相同的颜色。

// 次要主题色
// 此处的颜色各主题色均保持固定不变。
// 我打算以后改成自动根据获取主要主题色的 accent-50 色号自动获取。
$secondary-colors: (
	pink: #f06e8e,
	cyan: #45b3e1,
	green: #4bb530,
	orange: #e09627,
	purple: #b252d4,
	red: #dd1818,
	yellow: #ffca2c,
);

// 主要主题色
// 此处的颜色根据主题色自动变换。
$primary-colors: (
	pink: (
		accent-80: (#821c38, #ffedf2),
		accent-70: (#9e3852, #ffd3de),
		accent-60: (#cc5775, #f8afc1), // pressed
		accent-50: (#f06e8e, #f390a9), // normal
		accent-40: (#f390a9, #f06e8e), // hover
		accent-30: (#f8afc1, #cc5775),
		accent-20: (#ffd3de, #9e3852), // disabled
		accent-10: (#ffedf2, #821c38),
	),
	cyan: (
		accent-80: #821c38,
		accent-70: #9e3852,
		accent-60: #cc5775,
		accent-50: #45b3e1, // 更改其它配色，我只改了一个，这么不统一，02 肯定骂死我。
		accent-40: #f390a9,
		accent-30: #f8afc1,
		accent-20: #ffd3de,
		accent-10: #ffedf2,
	),
	green: (
		accent-80: #821c38,
		accent-70: #9e3852,
		accent-60: #cc5775,
		accent-50: #4bb530,
		accent-40: #f390a9,
		accent-30: #f8afc1,
		accent-20: #ffd3de,
		accent-10: #ffedf2,
	),
	orange: (
		accent-80: #821c38,
		accent-70: #9e3852,
		accent-60: #cc5775,
		accent-50: #e09627,
		accent-40: #f390a9,
		accent-30: #f8afc1,
		accent-20: #ffd3de,
		accent-10: #ffedf2,
	),
	purple: (
		accent-80: #821c38,
		accent-70: #9e3852,
		accent-60: #cc5775,
		accent-50: #b252d4,
		accent-40: #f390a9,
		accent-30: #f8afc1,
		accent-20: #ffd3de,
		accent-10: #ffedf2,
	),
);

// 各状态所用颜色值
:root {
	--accent: var(--accent-50);
	--accent-hover: var(--accent-40);
	--accent-pressed: var(--accent-60);
	--accent-disabled: var(--accent-20);
}

// 在对应的 page，通过以下指令切换主题色，如切换成 pink 主题色。
// useHead({ htmlAttrs: { "data-palette": "pink" }});
// 下面的内容是根据 Sass 映射自动转换为 CSS 属性的逻辑代码，不用动。

/// 给定一个颜色值，可以是单个浅色主题颜色（深色主题颜色自动反转颜色获得），也可以是由浅色主题颜色和深色主题颜色组成的列表。
/// 根据当前的主题返回所需的颜色值。
/// @param {Color | List} $color - 颜色值。
/// @param {Bool} $is-light - 当前是否是浅色主题？
/// @return {Color} 返回所需的主题颜色。
@function set-color($color, $is-light) {
	$light-color: null;
	$dark-color: null;

	@if type-of($value: $color) == "list" {
		$light-color: list.nth($color, 1);
		$dark-color: list.nth($color, 2);
	} @else {
		$light-color: $color;
		$dark-color: invert-lightness($color);
	}

	@return if($is-light, $light-color, $dark-color);
}

@for $i from 1 through 2 {
	$is-light: $i == 1;
	$selector: if($is-light, $light-theme, $dark-theme);
	#{$selector} {
		@each $key, $color in $grayscale-colors {
			#{key-to-css-var($key)}: set-color($color, $is-light);
		}

		@each $key, $color in $secondary-colors {
			#{key-to-css-var($key)}: set-color($color, $is-light);
		}

		@each $palette, $accents in $primary-colors {
			&[data-palette=#{"" + $palette}] {
				@each $key, $color in $accents {
					#{key-to-css-var($key)}: set-color($color, $is-light);
				}
			}
		}
	}
}
