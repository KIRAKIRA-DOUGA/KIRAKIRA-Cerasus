@use "sass:color";

/// 将指定颜色反转亮度。
/// @param {Color} $color - 颜色值。
/// @return {Color} 反转亮度后的颜色值。
@function invert-lightness($color) {
	$lightness: 100% - color.lightness($color);

	@return hsla(hue($color), saturation($color), $lightness, alpha($color));
}

/// 将 Sass 映射的键名转换为 CSS 属性的属性名。
/// @param {String} $key - Sass 映射的键名。
/// @return {String} CSS 属性的属性名。
@function key-to-css-var($key) {
	@return unquote($string: "--" + $key);
}

/// 将颜色值中的“#”号转义，放在 background url data svg 中。
/// @param {Color} $color - 颜色值。
/// @return {String} 转义 SVG 中的颜色值。
@function color-to-svg-color($color) {
	@return unquote("%23" + str-slice(#{$color}, -6));
}

/// 将颜色（如 `#f00`）转换为 RGB 列表（如 `255, 0, 0`），方便用于调用 rgba 函数。
/// @param {Color} $color - 颜色值。
/// @return {List} RGB 三色的列表。
@function color-to-rgb-list($color) {
	@return color.red($color), color.green($color), color.blue($color);
}

/// 调用主题色。
/// @param {String} $css-var-name - 颜色的 CSS 属性名称，不必加前面的“--”。也可以是 white 或 black。
/// @param {Number | null} $alpha [null] - Alpha 值，如果留空表示不透明色。
/// @return {Color} 返回由 var 调用的自定义属性纯色，或 rgba 封装的透明色。
@function c($css-var-name, $alpha: null) {
	@if $css-var-name == white or $css-var-name == black {
		@return if(not $alpha, $css-var-name, color.change($color: $css-var-name, $alpha: calc($alpha / 100%)));
	}

	@if not $alpha {
		@return var(--#{$css-var-name});
	} @else {
		@return rgba(var(--#{$css-var-name}-rgb), $alpha);
	}
}
