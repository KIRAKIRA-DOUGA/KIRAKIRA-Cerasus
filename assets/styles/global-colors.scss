@use "theme/colors" as *;
@use "theme/internal" as *;

// 下面的内容是根据 Sass 映射自动转换为 CSS 属性的逻辑代码，不用动。
// TODO: [兰音] 即将支持相对颜色（Relative colors / rgb(from ...)）来实现改变颜色透明度的功能，然而截至目前除了 Safari 没有浏览器正式支持该功能。

@for $i from 1 through 2 {
	$is-light: $i == 1;
	$force-color: force-color;
	$selector: if(
		$is-light,
		":root, .#{$force-color}, :root.light, .#{$force-color}.light",
		":root.dark, .#{$force-color}.dark"
	);

	#{$selector} {
		color-scheme: if($is-light, light, dark);

		@for $j from 1 through 2 {
			$is-rgb-list: $j == 2;

			@each $colors in $neutral-colors, $secondary-colors, $grayscale-colors {
				@each $key, $color in $colors {
					@include hex-or-rgb-color($key, $color, $is-light, $is-rgb-list);
				}
			}

			@if $is-light {
				@each $state, $color in $state-colors {
					@if not $is-rgb-list {
						@if type-of($color) != list {
							--#{$state}: #{c($color)};
						} @else {
							--#{$state}: #{c(list.nth($color, 1), list.nth($color, 2))};
						}
					} @else {
						--#{$state}-rgb: var(--#{$color}-rgb);
					}
				}
			}
		}

		@each $palette, $accents in $primary-colors {
			&.#{"" + $palette} {
				accent-color: themed-color(map.get($secondary-colors, $palette), $is-light);

				@for $j from 1 through 2 {
					$is-rgb-list: $j == 2;

					@each $key, $color in $accents {
						@include hex-or-rgb-color($key, $color, $is-light, $is-rgb-list);

						@if $is-rgb-list {
							@include wave-link($key, $color, $is-light);
						}
					}
				}
			}
		}
	}
}
